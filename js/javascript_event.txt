# 이벤트 핸들링 : 이벤트가 자바스크립트를 실행하는 방법은 세단계를 거쳐 실행된다. 
1. 이벤트에 반응할 요소를 선택한다(해당 노드에 접근하기 위해 DOM쿼리(노드찾는 메서드들 getElementById같은거)를 이용하면된다)
2. 선택된 노드에서 어떤 이벤트가 발생했을 때 어떻게 처리할 것인지 정의하는 과정(binding)
3. 이벤트가 발생했을 때 실행될 코드를 작성한다 



onblur : input요소에 onblur속성은 사용자가 해당 요소로부터 다른 요소로 포커스가 이동하면 발생한다 

이벤트핸들러 : 요소에 이벤트를 바인딩하고 이벤트가 발생했을때 호출될 함수를 지정하는 문법
// element.onevnet = functionName;   이벤트핸들러 문법 


이벤트 리스너 : 이벤트를 처리하는 가장 최근 문법. 오래된 브라우저에서는 지원 안됨.
//element.addEventListener('event', functionName[,false or ture]);
     요소 .이벤트동작방식(이벤트종류_on안붙인다, 함수이름, 이벤트흐름false가 기본값)

//함수에 매개변수 값 넣으려면 
elUsername.addEventListener('blur', function(){
	checkUsername(5);
},false);

function checkUsername(e, minLength){
	let target = e.target;
}

let el = document.getElementById(‘username’);
el.addEventListener(‘blur’, function(e){
	checkUsername(e, 5);
}, false);


# 이벤트 객체의 메서드
1. stopPropagation() : 이벤트 흐름을 중단시킬때(false_버블링, true_캡처링)
if (event.stopPropagation){
	event.stopPropagation();
} else {
	event.cancelBubble = true;
}
2. preventDefault() : 기본동작취소 
if (event.preventDefault){
	event.preventDefault();
} else {
	event.returnValue = false;
}

3. return false : 이벤트 중단 



